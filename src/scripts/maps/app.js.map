{"version":3,"sources":["app.ts"],"names":[],"mappings":"AAAA,oCAAoC;AACpC,4CAA4C;AAC5C,oCAAoC;AACpC,wCAAwC;AACxC,IAAI,GAAQ,CAAC;AAEb,IAAI,IAAiB,CAAC;AAEtB,CAAC,UAAS,OAAO;IACjB,YAAY,CAAC;IAET,2BAA2B;IAC3B,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC;IAC3B,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACjC,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QACzB,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IAC7B,CAAC;IACD,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC;IACxB,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC;IAExB,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE;QAE1C,cAAc;QACd,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;QACjD,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAErD,yBAAyB;QACzB,IAAI,GAAG,IAAI,gBAAgB,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAErC,IAAI,IAAI,GAAW,IAAI,MAAM,CAAC,EAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,EAAE,CAAC,CAAC,CAAC;QAE3E,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACjC,IAAI,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,EAAE,CAAC,CAAC,CAAC;QAC9D,CAAC;QAED,gBAAgB;QAExB,sCAAsC;QAE9B,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;IACxB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC","file":"app.js","sourcesContent":["/// <reference path=\"others.d.ts\" />\n/// <reference path=\"markerAggregator.ts\" />\n/// <reference path=\"./D2tree.ts\" />\n/* global L, document, XMLHttpRequest */\nvar map: any;\n\nvar test: IAggregator;\n\n(function(context){\n'use strict';\n\n    // calculate markers center\n    var avgLat = 0, avgLng = 0;\n    for (var i=0; i<points.length; i++) {\n        avgLat += +points[i].lat;\n        avgLng += +points[i].lng;\n    }\n    avgLat /= points.length;\n    avgLng /= points.length;\n    \n    document.addEventListener('DOMContentLoaded', function () {\n    \n        // display map\n        map = L.map('map').setView([avgLat, avgLng], 12);\n        L.tileLayer.provider('OpenStreetMap.HOT').addTo(map);\n         \n        // instantiate aggregator\n        test = new MarkerAggregator(map, {});\n        \n        var tree:ID2Tree = new D2tree({lat: points[0].lat, lng: points[0].lng}, 0);\n        \n        for (var i=1; i<points.length; i++) {  \n            tree.addLeaf({lat: points[i].lat, lng: points[i].lng}, i);\n        }\n        \n        // test.start();\n            \n// console.log(test.getBaseMarkers());\n\n        context.tree = tree;    \n    });\n})(window);"],"sourceRoot":"/source/"}